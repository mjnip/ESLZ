{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "input": {
      "value": {
        "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2",
        "Type": "/providers/Microsoft.Management/managementGroups",
        "Name": "ESLZ2",
        "TenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
        "DisplayName": "ESLZ2",
        "UpdatedTime": "0001-01-01T00:00:00Z",
        "UpdatedBy": null,
        "ParentId": "/providers/Microsoft.Management/managementGroups/4a02ceba-3c5e-478b-8855-a218e02dd6cc",
        "ParentName": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
        "ParentDisplayName": "Tenant Root Group",
        "Children": [
          {
            "Type": "/providers/Microsoft.Management/managementGroups",
            "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-platform",
            "Name": "ESLZ2-platform",
            "DisplayName": "ESLZ2-platform",
            "Children": [
              {
                "Type": "/providers/Microsoft.Management/managementGroups",
                "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-management",
                "Name": "ESLZ2-management",
                "DisplayName": "ESLZ2-management",
                "Children": [
                  {
                    "Type": "/subscriptions",
                    "Id": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2",
                    "Name": "06867d06-c4c7-47f1-a065-1aa3f882cdc2",
                    "DisplayName": "Visual Studio Enterprise Subscription",
                    "Children": null
                  }
                ]
              }
            ]
          },
          {
            "Type": "/providers/Microsoft.Management/managementGroups",
            "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-decommissioned",
            "Name": "ESLZ2-decommissioned",
            "DisplayName": "ESLZ2-decommissioned",
            "Children": null
          },
          {
            "Type": "/providers/Microsoft.Management/managementGroups",
            "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-landingzones",
            "Name": "ESLZ2-landingzones",
            "DisplayName": "ESLZ2-landingzones",
            "Children": [
              {
                "Type": "/providers/Microsoft.Management/managementGroups",
                "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-online",
                "Name": "ESLZ2-online",
                "DisplayName": "ESLZ2-online",
                "Children": null
              }
            ]
          },
          {
            "Type": "/providers/Microsoft.Management/managementGroups",
            "Id": "/providers/Microsoft.Management/managementGroups/ESLZ2-sandboxes",
            "Name": "ESLZ2-sandboxes",
            "DisplayName": "ESLZ2-sandboxes",
            "Children": null
          }
        ],
        "properties": {
          "policyDefinitions": [
            {
              "Name": "Append-KV-SoftDelete",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete",
              "ResourceName": "Append-KV-SoftDelete",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete",
              "Properties": {
                "Description": "This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.",
                "DisplayName": "KeyVault SoftDelete should be enabled",
                "Mode": "All",
                "Parameters": {},
                "PolicyRule": {
                  "if": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.KeyVault/vaults"
                          },
                          {
                            "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                            "notEquals": false
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "append",
                    "details": [
                      {
                        "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                        "value": true
                      }
                    ]
                  }
                }
              }
            },
            {
              "Name": "Deny-AA-child-resources",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources",
              "ResourceName": "Deny-AA-child-resources",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources",
              "Properties": {
                "Description": "This policy denies the creation of child resources on the Automation Account",
                "DisplayName": "No child resources in Automation Account",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "in": [
                          "Microsoft.Automation/automationAccounts/runbooks",
                          "Microsoft.Automation/automationAccounts/variables",
                          "Microsoft.Automation/automationAccounts/modules",
                          "Microsoft.Automation/automationAccounts/credentials",
                          "Microsoft.Automation/automationAccounts/connections",
                          "Microsoft.Automation/automationAccount/certificates"
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-AppGW-Without-WAF",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF",
              "ResourceName": "Deny-AppGW-Without-WAF",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF",
              "Properties": {
                "Description": "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled",
                "DisplayName": "Application Gateway should be deployed with WAF enabled",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/applicationGateways"
                      },
                      {
                        "field": "Microsoft.Network/applicationGateways/sku.name",
                        "notequals": "WAF_v2"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-ERPeering",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-ERPeering",
              "ResourceName": "Deny-ERPeering",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-ERPeering",
              "Properties": {
                "Description": "This policy denies the creation of vNet Peerings under the assigned scope.",
                "DisplayName": "Deny vNet peering ",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-Private-DNS-Zones",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones",
              "ResourceName": "Deny-Private-DNS-Zones",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones",
              "Properties": {
                "Description": "This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription",
                "DisplayName": "Deny the creation of private DNS",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/privateDnsZones"
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-Aks",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks",
              "ResourceName": "Deny-PublicEndpoint-Aks",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks",
              "Properties": {
                "Description": "This policy denies  the creation of  Azure Kubernetes Service non-private clusters",
                "DisplayName": "Public network access on AKS API should be disabled",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.ContainerService/managedClusters"
                      },
                      {
                        "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                        "notequals": "true"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-CosmosDB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB",
              "ResourceName": "Deny-PublicEndpoint-CosmosDB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB",
              "Properties": {
                "Description": "This policy denies that  Cosmos database accounts  are created with out public network access is disabled.",
                "DisplayName": "Public network access should be disabled for CosmosDB",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.DocumentDB/databaseAccounts"
                      },
                      {
                        "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                        "notequals": "Disabled"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-KeyVault",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault",
              "ResourceName": "Deny-PublicEndpoint-KeyVault",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault",
              "Properties": {
                "Description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints",
                "DisplayName": "Public network access should be disabled for KeyVault",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.KeyVault/vaults"
                      },
                      {
                        "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                        "notequals": "Deny"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-MariaDB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
              "ResourceName": "Deny-PublicEndpoint-MariaDB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
              "Properties": {
                "Description": "This policy denies the creation of Maria DB accounts with exposed public endpoints",
                "DisplayName": "Public network access should be disabled for MariaDB",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.DBforMariaDB/servers"
                      },
                      {
                        "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                        "notequals": "Disabled"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-MySQL",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL",
              "ResourceName": "Deny-PublicEndpoint-MySQL",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL",
              "Properties": {
                "Description": "This policy denies creation of MySql DB accounts with exposed public endpoints",
                "DisplayName": "Public network access should be disabled for MySQL",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.DBforMySQL/servers"
                      },
                      {
                        "field": "Microsoft.DBforMySQL/servers/publicNetworkAccess",
                        "notequals": "Disabled"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-PostgreSql",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql",
              "ResourceName": "Deny-PublicEndpoint-PostgreSql",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql",
              "Properties": {
                "Description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints",
                "DisplayName": "Public network access should be disabled for PostgreSql",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.DBforPostgreSQL/servers"
                      },
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess",
                        "notequals": "Disabled"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-Sql",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql",
              "ResourceName": "Deny-PublicEndpoint-Sql",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql",
              "Properties": {
                "Description": "This policy denies creation of Sql servers with exposed public endpoints",
                "DisplayName": "Public network access on Azure SQL Database should be disabled",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Sql/servers"
                      },
                      {
                        "field": "Microsoft.Sql/servers/publicNetworkAccess",
                        "notequals": "Disabled"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicEndpoint-Storage",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage",
              "ResourceName": "Deny-PublicEndpoint-Storage",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage",
              "Properties": {
                "Description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints",
                "DisplayName": "Public network access onStorage accounts should be disabled",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Storage/storageAccounts"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                        "notequals": "Deny"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicIP",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
              "ResourceName": "Deny-PublicIP",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
              "Properties": {
                "Description": "This policy denies creation of Public IPs under the assigned scope.",
                "DisplayName": "Deny the creation of public IP",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/publicIPAddresses"
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deny-Subnet-Without-Nsg",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
              "ResourceName": "Deny-Subnet-Without-Nsg",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
              "Properties": {
                "Description": "This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.",
                "DisplayName": "Subnets should have a Network Security Group ",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/virtualNetworks/subnets"
                      },
                      {
                        "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                        "exists": "false"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]"
                  }
                }
              }
            },
            {
              "Name": "Deploy-ASC-Standard",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard",
              "ResourceName": "Deploy-ASC-Standard",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard",
              "Properties": {
                "Description": "Deploys  the Azure Defender settings in Azure Security Center for  the specific services.",
                "DisplayName": "Deploy Azure Defender settings in Azure Security Center.",
                "Mode": "All",
                "Parameters": {
                  "pricingTierVMs": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierVMs",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierSqlServers": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierSqlServers",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierAppServices": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierAppServices",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierStorageAccounts": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierStorageAccounts",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierContainerRegistry": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierContainerRegistry",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierKeyVaults": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierKeyVaults",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "pricingTierKubernetesService": {
                    "type": "String",
                    "metadata": {
                      "displayName": "pricingTierKubernetesService",
                      "description": null
                    },
                    "allowedValues": [
                      "Standard",
                      "Free"
                    ],
                    "defaultValue": "Standard"
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Security/pricings",
                      "deploymentScope": "subscription",
                      "existenceScope": "subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Security/pricings/pricingTier",
                            "equals": "Standard"
                          },
                          {
                            "field": "type",
                            "equals": "Microsoft.Security/pricings"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "pricingTierVMs": {
                              "value": "[parameters('pricingTierVMs')]"
                            },
                            "pricingTierSqlServers": {
                              "value": "[parameters('pricingTierSqlServers')]"
                            },
                            "pricingTierAppServices": {
                              "value": "[parameters('pricingTierAppServices')]"
                            },
                            "pricingTierStorageAccounts": {
                              "value": "[parameters('pricingTierStorageAccounts')]"
                            },
                            "pricingTierContainerRegistry": {
                              "value": "[parameters('pricingTierContainerRegistry')]"
                            },
                            "pricingTierKeyVaults": {
                              "value": "[parameters('pricingTierKeyVaults')]"
                            },
                            "pricingTierKubernetesService": {
                              "value": "[parameters('pricingTierKubernetesService')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "pricingTierVMs": {
                                "type": "string",
                                "metadata": {
                                  "description": "pricingTierVMs"
                                }
                              },
                              "pricingTierSqlServers": {
                                "type": "string",
                                "metadata": {
                                  "description": "pricingTierSqlServers"
                                }
                              },
                              "pricingTierAppServices": {
                                "type": "string",
                                "metadata": {
                                  "description": "pricingTierAppServices"
                                }
                              },
                              "pricingTierStorageAccounts": {
                                "type": "string",
                                "metadata": {
                                  "description": "pricingTierStorageAccounts"
                                }
                              },
                              "pricingTierContainerRegistry": {
                                "type": "string",
                                "metadata": {
                                  "description": "ContainerRegistry"
                                }
                              },
                              "pricingTierKeyVaults": {
                                "type": "string",
                                "metadata": {
                                  "description": "KeyVaults"
                                }
                              },
                              "pricingTierKubernetesService": {
                                "type": "string",
                                "metadata": {
                                  "description": "KubernetesService"
                                }
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "VirtualMachines",
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierVMs')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "StorageAccounts",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/VirtualMachines')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierStorageAccounts')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "AppServices",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/StorageAccounts')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierAppServices')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "SqlServers",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/AppServices')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierSqlServers')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "KeyVaults",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/SqlServers')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierKeyVaults')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "KubernetesService",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/KeyVaults')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierKubernetesService')]"
                                }
                              },
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2018-06-01",
                                "name": "ContainerRegistry",
                                "dependsOn": [
                                  "[concat('Microsoft.Security/pricings/KubernetesService')]"
                                ],
                                "properties": {
                                  "pricingTier": "[parameters('pricingTierContainerRegistry')]"
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-AzureBackup-on-VM",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-AzureBackup-on-VM",
              "ResourceName": "Deploy-AzureBackup-on-VM",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-AzureBackup-on-VM",
              "Properties": {
                "Description": "Deploys if not exist a backup vault in the resourcegroup of  the virtual machine and enabled the backup for the virtual machine with defaultPolicy enabled.",
                "DisplayName": "Deploy Azure Backup on virtual machines",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "2008-R2-SP1",
                                  "2008-R2-SP1-smalldisk",
                                  "2012-Datacenter",
                                  "2012-Datacenter-smalldisk",
                                  "2012-R2-Datacenter",
                                  "2012-R2-Datacenter-smalldisk",
                                  "2016-Datacenter",
                                  "2016-Datacenter-Server-Core",
                                  "2016-Datacenter-Server-Core-smalldisk",
                                  "2016-Datacenter-smalldisk",
                                  "2016-Datacenter-with-Containers",
                                  "2016-Datacenter-with-RDSH",
                                  "2019-Datacenter",
                                  "2019-Datacenter-Core",
                                  "2019-Datacenter-Core-smalldisk",
                                  "2019-Datacenter-Core-with-Containers",
                                  "2019-Datacenter-Core-with-Containers-smalldisk",
                                  "2019-Datacenter-smalldisk",
                                  "2019-Datacenter-with-Containers",
                                  "2019-Datacenter-with-Containers-smalldisk",
                                  "2019-Datacenter-zhcn"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerSemiAnnual"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "Datacenter-Core-1709-smalldisk",
                                  "Datacenter-Core-1709-with-Containers-smalldisk",
                                  "Datacenter-Core-1803-with-Containers-smalldisk"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServerHPCPack"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerHPCPack"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftSQLServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016-BYOL"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2-BYOL"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftRServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "MLServer-WS2016"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftVisualStudio"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "VisualStudio",
                                  "Windows"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftDynamicsAX"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Dynamics"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "equals": "Pre-Req-AX7-Onebox-U8"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "microsoft-ads"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "windows-data-science-vm"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsDesktop"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Windows-10"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "SUSE"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "SLES",
                                  "SLES-HPC",
                                  "SLES-HPC-Priority",
                                  "SLES-SAP",
                                  "SLES-SAP-BYOS",
                                  "SLES-Priority",
                                  "SLES-BYOS",
                                  "SLES-SAPCAL",
                                  "SLES-Standard"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "12*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Canonical"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "UbuntuServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "14.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "16.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "18.04*LTS"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Oracle"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Oracle-Linux"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7.*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "OpenLogic"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "CentOS",
                                  "Centos-LVM",
                                  "CentOS-SRIOV"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "cloudera"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "cloudera-centos-os"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "like": "7*"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "resourceGroupName": "[resourceGroup().name]",
                      "type": "Microsoft.RecoveryServices/backupprotecteditems",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/f9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                      ],
                      "existenceCondition": {
                        "field": "name",
                        "like": "*"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of Azure Virtual Machines"
                                }
                              },
                              "vmRgName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group containing the virtual machines."
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location for VM and Backup vault"
                                }
                              }
                            },
                            "variables": {
                              "backupFabric": "Azure",
                              "backupPolicy": "DefaultPolicy",
                              "v2VmType": "Microsoft.Compute/virtualMachines",
                              "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                              "v2Vm": "vm;iaasvmcontainerv2;",
                              "vaultName": "[concat(resourceGroup().name, '-backupvault')]"
                            },
                            "resources": [
                              {
                                "name": "[variables('vaultName')]",
                                "type": "Microsoft.RecoveryServices/vaults",
                                "apiVersion": "2016-06-01",
                                "location": "[parameters('location')]",
                                "properties": {},
                                "sku": {
                                  "name": "Standard"
                                }
                              },
                              {
                                "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                                "apiVersion": "2016-12-01",
                                "location": "[parameters('location')]",
                                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                "dependsOn": [
                                  "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                                ],
                                "properties": {
                                  "protectedItemType": "[variables('v2VmType')]",
                                  "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('backupPolicy'))]",
                                  "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vmRgName": {
                              "value": "[resourceGroup().name]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Budget",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget",
              "ResourceName": "Deploy-Budget",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget",
              "Properties": {
                "Description": "Depoloys a default budget on all subscriptions under the assigned scope.",
                "DisplayName": "Deploy budet",
                "Mode": "All",
                "Parameters": {
                  "amount": {
                    "type": "String",
                    "metadata": {
                      "description": "The total amount of cost or usage to track with the budget"
                    },
                    "defaultValue": "1000"
                  },
                  "timeGrain": {
                    "type": "String",
                    "metadata": {
                      "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                    },
                    "allowedValues": [
                      "Monthly",
                      "Quarterly",
                      "Annually",
                      "BillingMonth",
                      "BillingQuarter",
                      "BillingAnnual"
                    ],
                    "defaultValue": "Monthly"
                  },
                  "firstThreshold": {
                    "type": "String",
                    "metadata": {
                      "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                    },
                    "defaultValue": "90"
                  },
                  "secondThreshold": {
                    "type": "String",
                    "metadata": {
                      "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                    },
                    "defaultValue": "100"
                  },
                  "contactRoles": {
                    "type": "Array",
                    "metadata": {
                      "description": "The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."
                    },
                    "defaultValue": [
                      "Owner",
                      "Contributor"
                    ]
                  },
                  "contactEmails": {
                    "type": "Array",
                    "metadata": {
                      "description": "The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."
                    },
                    "defaultValue": []
                  },
                  "contactGroups": {
                    "type": "Array",
                    "metadata": {
                      "description": "The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."
                    },
                    "defaultValue": []
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "DeployIfNotExists",
                    "details": {
                      "type": "Microsoft.Consumption/budgets",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Consumption/budgets/amount",
                            "equals": "[parameters('amount')]"
                          },
                          {
                            "field": "Microsoft.Consumption/budgets/timeGrain",
                            "equals": "[parameters('timeGrain')]"
                          },
                          {
                            "field": "Microsoft.Consumption/budgets/category",
                            "equals": "Cost"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "amount": {
                              "value": "[parameters('amount')]"
                            },
                            "timeGrain": {
                              "value": "[parameters('timeGrain')]"
                            },
                            "firstThreshold": {
                              "value": "[parameters('firstThreshold')]"
                            },
                            "secondThreshold": {
                              "value": "[parameters('secondThreshold')]"
                            },
                            "contactEmails": {
                              "value": "[parameters('contactEmails')]"
                            },
                            "contactRoles": {
                              "value": "[parameters('contactRoles')]"
                            },
                            "contactGroups": {
                              "value": "[parameters('contactGroups')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "amount": {
                                "type": "string"
                              },
                              "timeGrain": {
                                "type": "string"
                              },
                              "firstThreshold": {
                                "type": "string"
                              },
                              "secondThreshold": {
                                "type": "string"
                              },
                              "contactEmails": {
                                "type": "array"
                              },
                              "contactRoles": {
                                "type": "array"
                              },
                              "contactGroups": {
                                "type": "array"
                              },
                              "startDate": {
                                "type": "string",
                                "defaultValue": "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]"
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Consumption/budgets",
                                "apiVersion": "2019-10-01",
                                "name": "default-sandbox-budget",
                                "properties": {
                                  "timePeriod": {
                                    "startDate": "[parameters('startDate')]"
                                  },
                                  "timeGrain": "[parameters('timeGrain')]",
                                  "amount": "[parameters('amount')]",
                                  "category": "Cost",
                                  "notifications": {
                                    "NotificationForExceededBudget1": {
                                      "enabled": true,
                                      "operator": "GreaterThan",
                                      "threshold": "[parameters('firstThreshold')]",
                                      "contactEmails": "[parameters('contactEmails')]",
                                      "contactRoles": "[parameters('contactRoles')]",
                                      "contactGroups": "[parameters('contactGroups')]"
                                    },
                                    "NotificationForExceededBudget2": {
                                      "enabled": true,
                                      "operator": "GreaterThan",
                                      "threshold": "[parameters('secondThreshold')]",
                                      "contactEmails": "[parameters('contactEmails')]",
                                      "contactRoles": "[parameters('contactRoles')]",
                                      "contactGroups": "[parameters('contactGroups')]"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DDoSProtection",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection",
              "ResourceName": "Deploy-DDoSProtection",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection",
              "Properties": {
                "Description": "Deploys an Azure DDoS Protection Standard plan",
                "DisplayName": "Deploy an Azure DDoS Protection Standard plan",
                "Mode": "All",
                "Parameters": {
                  "ddosName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "ddosName",
                      "description": "Name of the Virtual WAN"
                    }
                  },
                  "ddosRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "ddosRegion",
                      "description": "Select Azure region for Virtual WAN",
                      "strongType": "location"
                    }
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/ddosProtectionPlans",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "resourceGroupName": "[parameters('rgName')]",
                      "name": "[parameters('ddosName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "ddosname": {
                              "value": "[parameters('ddosname')]"
                            },
                            "ddosregion": {
                              "value": "[parameters('ddosRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "rgName": {
                                "type": "string"
                              },
                              "ddosname": {
                                "type": "string"
                              },
                              "ddosRegion": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "ddosprotection",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/ddosProtectionPlans",
                                        "apiVersion": "2019-12-01",
                                        "name": "[parameters('ddosName')]",
                                        "location": "[parameters('ddosRegion')]",
                                        "properties": {}
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-AA",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
              "ResourceName": "Deploy-Diagnostics-AA",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Automation/automationAccounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "timeGrain": null,
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "JobLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "JobStreams",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DscNodeStatus",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ACI",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
              "ResourceName": "Deploy-Diagnostics-ACI",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.",
                "DisplayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.ContainerInstance/containerGroups"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ACR",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
              "ResourceName": "Deploy-Diagnostics-ACR",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.",
                "DisplayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.ContainerRegistry/registries"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ContainerRegistryLoginEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ContainerRegistryRepositoryEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ActivityLog",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog",
              "ResourceName": "Deploy-Diagnostics-ActivityLog",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Activity Log to stream to a Log Analytics workspace when any Activity Log which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with category enabled.",
                "DisplayName": "Deploy Diagnostic Settings for Activity Log to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Primary Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "logAnalytics": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "name": "subscriptionToLa",
                                "type": "Microsoft.Insights/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "location": "Global",
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "logs": [
                                    {
                                      "category": "Administrative",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Security",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ServiceHealth",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Alert",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Recommendation",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Policy",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Autoscale",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ResourceHealth",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-AKS",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS",
              "ResourceName": "Deploy-Diagnostics-AKS",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                "DisplayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.ContainerService/managedClusters"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "kube-audit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "kube-apiserver",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "kube-controller-manager",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "kube-scheduler",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "cluster-autoscaler",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "guard",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "kube-audit-admin",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-AnalysisService",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
              "ResourceName": "Deploy-Diagnostics-AnalysisService",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.AnalysisServices/servers"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.AnalysisServices/servers/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Engine",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Service",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-APIMgmt",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
              "ResourceName": "Deploy-Diagnostics-APIMgmt",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
              "Properties": {
                "Description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.ApiManagement/service"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.ApiManagement/service/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "Gateway Requests",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    },
                                    {
                                      "category": "Capacity",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    },
                                    {
                                      "category": "EventHub Events",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    },
                                    {
                                      "category": "Network Status",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "GatewayLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ApplicationGateway",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
              "ResourceName": "Deploy-Diagnostics-ApplicationGateway",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/applicationGateways"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ApplicationGatewayAccessLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ApplicationGatewayPerformanceLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ApplicationGatewayFirewallLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Batch",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch",
              "ResourceName": "Deploy-Diagnostics-Batch",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Batch/batchAccounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Batch/batchAccounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ServiceLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-CDNEndpoints",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
              "ResourceName": "Deploy-Diagnostics-CDNEndpoints",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
              "Properties": {
                "Description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Cdn/profiles/endpoints"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [],
                                  "logs": [
                                    {
                                      "category": "CoreAnalytics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('fullName')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-CognitiveServices",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
              "ResourceName": "Deploy-Diagnostics-CognitiveServices",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.CognitiveServices/accounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Audit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "RequestResponse",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Trace",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-CosmosDB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
              "ResourceName": "Deploy-Diagnostics-CosmosDB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DocumentDB/databaseAccounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "Requests",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "DataPlaneRequests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "MongoRequests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "QueryRuntimeStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "PartitionKeyStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "PartitionKeyRUConsumption",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ControlPlaneRequests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "CassandraRequests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "GremlinRequests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Databricks",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
              "ResourceName": "Deploy-Diagnostics-Databricks",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Databricks/workspaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Databricks/workspaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "logs": [
                                    {
                                      "category": "dbfs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "clusters",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "accounts",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "jobs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "notebook",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "ssh",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "workspace",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "secrets",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "sqlPermissions",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "instancePools",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-DataFactory",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
              "ResourceName": "Deploy-Diagnostics-DataFactory",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DataFactory/factories"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DataFactory/factories/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ActivityRuns",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "PipelineRuns",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "TriggerRuns",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISPackageEventMessages",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISPackageExecutableStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISPackageEventMessageContext",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISPackageExecutionComponentPhases",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISPackageExecutionDataStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SSISIntegrationRuntimeLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-DataLakeStore",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore",
              "ResourceName": "Deploy-Diagnostics-DataLakeStore",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DataLakeStore/accounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DataLakeStore/accounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Audit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Requests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-DLAnalytics",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
              "ResourceName": "Deploy-Diagnostics-DLAnalytics",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DataLakeAnalytics/accounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Audit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Requests",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-EventGridSub",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
              "ResourceName": "Deploy-Diagnostics-EventGridSub",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.EventGrid/eventSubscriptions"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-EventGridSystemTopic",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
              "ResourceName": "Deploy-Diagnostics-EventGridSystemTopic",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.EventGrid/systemTopics"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "DeliveryFailures",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-EventGridTopic",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
              "ResourceName": "Deploy-Diagnostics-EventGridTopic",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.EventGrid/topics"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.EventGrid/topics/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "DeliveryFailures",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "PublishFailures",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-EventHub",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub",
              "ResourceName": "Deploy-Diagnostics-EventHub",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.EventHub/namespaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ArchiveLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "OperationalLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AutoScaleLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "KafkaCoordinatorLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "KafkaUserErrorLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "EventHubVNetConnectionEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "CustomerManagedKeyUserLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ExpressRoute",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
              "ResourceName": "Deploy-Diagnostics-ExpressRoute",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
              "Properties": {
                "Description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/expressRouteCircuits"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "PeeringRouteLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Firewall",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
              "ResourceName": "Deploy-Diagnostics-Firewall",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/azureFirewalls"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AzureFirewallApplicationRule",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AzureFirewallNetworkRule",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AzureFirewallDnsProxy",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-FrontDoor",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
              "ResourceName": "Deploy-Diagnostics-FrontDoor",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/frontDoors"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/frontDoors/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "FrontdoorAccessLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "FrontdoorWebApplicationFirewallLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Function",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
              "ResourceName": "Deploy-Diagnostics-Function",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Web/sites"
                      },
                      {
                        "value": "[field('kind')]",
                        "notEquals": "app"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "FunctionAppLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-HDInsight",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
              "ResourceName": "Deploy-Diagnostics-HDInsight",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
              "Properties": {
                "Description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.HDInsight/clusters"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.HDInsight/clusters/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-iotHub",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
              "ResourceName": "Deploy-Diagnostics-iotHub",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
              "Properties": {
                "Description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Devices/IotHubs"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Devices/IotHubs/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Connections",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DeviceTelemetry",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "C2DCommands",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DeviceIdentityOperations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "FileUploadOperations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Routes",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "D2CTwinOperations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "C2DTwinOperations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "TwinQueries",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "JobsOperations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DirectMethods",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DistributedTracing",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Configurations",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DeviceStreams",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-KeyVault",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault",
              "ResourceName": "Deploy-Diagnostics-KeyVault",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.KeyVault/vaults"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "name": "setByPolicy",
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AuditEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-LoadBalancer",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
              "ResourceName": "Deploy-Diagnostics-LoadBalancer",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/loadBalancers"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "timeGrain": null,
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "LoadBalancerAlertEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "LoadBalancerProbeHealthStatus",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-LogicAppsISE",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
              "ResourceName": "Deploy-Diagnostics-LogicAppsISE",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Logic/integrationAccounts"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Logic/integrationAccounts/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [],
                                  "logs": [
                                    {
                                      "category": "IntegrationAccountTrackingEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-LogicAppsWF",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF",
              "ResourceName": "Deploy-Diagnostics-LogicAppsWF",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Logic/workflows"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Logic/workflows/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "WorkflowRuntime",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-MariaDB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
              "ResourceName": "Deploy-Diagnostics-MariaDB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
              "Properties": {
                "Description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DBforMariaDB/servers"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DBforMariaDB/servers/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "MySqlSlowLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "MySqlAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-MlWorkspace",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
              "ResourceName": "Deploy-Diagnostics-MlWorkspace",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.MachineLearningServices/workspaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "Run",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    },
                                    {
                                      "category": "Model",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": true
                                      }
                                    },
                                    {
                                      "category": "Quota",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    },
                                    {
                                      "category": "Resource",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AmlComputeClusterEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AmlComputeClusterNodeEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AmlComputeJobEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AmlComputeCpuGpuUtilization",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AmlRunStatusChangedEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-MySQL",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
              "ResourceName": "Deploy-Diagnostics-MySQL",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DBforMySQL/servers"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DBforMySQL/servers/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "MySqlSlowLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "MySqlAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-NetworkSecurityGroups",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
              "ResourceName": "Deploy-Diagnostics-NetworkSecurityGroups",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [],
                                  "logs": [
                                    {
                                      "category": "NetworkSecurityGroupEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "NetworkSecurityGroupRuleCounter",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-NIC",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
              "ResourceName": "Deploy-Diagnostics-NIC",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/networkInterfaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "timeGrain": null,
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-PostgreSQL",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
              "ResourceName": "Deploy-Diagnostics-PostgreSQL",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.DBforPostgreSQL/servers"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "PostgreSQLLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "QueryStoreRuntimeStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "QueryStoreWaitStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-PowerBIEmbedded",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
              "ResourceName": "Deploy-Diagnostics-PowerBIEmbedded",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.PowerBIDedicated/capacities"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Engine",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-PublicIP",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PublicIP",
              "ResourceName": "Deploy-Diagnostics-PublicIP",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PublicIP",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/publicIPAddresses"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/publicIPAddresses/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "timeGrain": null,
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "DDoSProtectionNotifications",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DDoSMitigationFlowLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DDoSMitigationReports",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-RecoveryVault",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault",
              "ResourceName": "Deploy-Diagnostics-RecoveryVault",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.RecoveryServices/vaults"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allof": [
                          {
                            "count": {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                              "where": {
                                "allof": [
                                  {
                                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                                    "in": [
                                      "CoreAzureBackup",
                                      "AddonAzureBackupJobs",
                                      "AddonAzureBackupAlerts",
                                      "AddonAzureBackupPolicy",
                                      "AddonAzureBackupStorage",
                                      "AddonAzureBackupProtectedInstance",
                                      "AzureBackupReport"
                                    ]
                                  },
                                  {
                                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled",
                                    "equals": "True"
                                  }
                                ]
                              }
                            },
                            "Equals": 7
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType",
                            "equals": "Dedicated"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "logAnalyticsDestinationType": "Dedicated",
                                  "metrics": [],
                                  "logs": [
                                    {
                                      "category": "CoreAzureBackup",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AddonAzureBackupAlerts",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AddonAzureBackupJobs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AddonAzureBackupPolicy",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AddonAzureBackupProtectedInstance",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AddonAzureBackupStorage",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AzureBackupReport",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-RedisCache",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
              "ResourceName": "Deploy-Diagnostics-RedisCache",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Cache/redis"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Cache/redis/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Relay",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
              "ResourceName": "Deploy-Diagnostics-Relay",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Relay/namespaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Relay/namespaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "HybridConnectionsEvent",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-SearchServices",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices",
              "ResourceName": "Deploy-Diagnostics-SearchServices",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Search/searchServices"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Search/searchServices/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "OperationLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-ServiceBus",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus",
              "ResourceName": "Deploy-Diagnostics-ServiceBus",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus",
              "Properties": {
                "Description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.ServiceBus/namespaces"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "OperationalLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-SignalR",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
              "ResourceName": "Deploy-Diagnostics-SignalR",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
              "Properties": {
                "Description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.SignalRService/SignalR"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.SignalRService/SignalR/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AllLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-SQLDBs",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs",
              "ResourceName": "Deploy-Diagnostics-SQLDBs",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs",
              "Properties": {
                "Description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/databases"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "SQLInsights",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AutomaticTuning",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DevOpsOperationsAudit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "QueryStoreRuntimeStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "QueryStoreWaitStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Errors",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DatabaseWaitStatistics",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Timeouts",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Blocks",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Deadlocks",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SQLSecurityAuditEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('fullName')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-SQLElasticPools",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
              "ResourceName": "Deploy-Diagnostics-SQLElasticPools",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
              "Properties": {
                "Description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/elasticPools"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('fullName')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-SQLMI",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
              "ResourceName": "Deploy-Diagnostics-SQLMI",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
              "Properties": {
                "Description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/managedInstances"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Sql/managedInstances/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "logs": [
                                    {
                                      "category": "ResourceUsageStats",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "SQLSecurityAuditEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "DevOpsOperationsAudit",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-StreamAnalytics",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics",
              "ResourceName": "Deploy-Diagnostics-StreamAnalytics",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.StreamAnalytics/streamingjobs"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Execution",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Authoring",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-TimeSeriesInsights",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
              "ResourceName": "Deploy-Diagnostics-TimeSeriesInsights",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.TimeSeriesInsights/environments"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "Ingress",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "Management",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-TrafficManager",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
              "ResourceName": "Deploy-Diagnostics-TrafficManager",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/trafficManagerProfiles"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "ProbeHealthStatusEvents",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-VirtualNetwork",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
              "ResourceName": "Deploy-Diagnostics-VirtualNetwork",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/virtualNetworks"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "VMProtectionAlerts",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-VM",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
              "ResourceName": "Deploy-Diagnostics-VM",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachines"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-VMSS",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
              "ResourceName": "Deploy-Diagnostics-VMSS",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachineScaleSets"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-VNetGW",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
              "ResourceName": "Deploy-Diagnostics-VNetGW",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
              "Properties": {
                "Description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                "DisplayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/virtualNetworkGateways"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "GatewayDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "IKEDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "P2SDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "RouteDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "RouteDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "TunnelDiagnosticLog",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-WebServerFarm",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
              "ResourceName": "Deploy-Diagnostics-WebServerFarm",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
              "Properties": {
                "Description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Web/serverfarms"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Web/serverfarms/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Website",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
              "ResourceName": "Deploy-Diagnostics-Website",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
              "Properties": {
                "Description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                "DisplayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "strongType": "omsWorkspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  },
                  "profileName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Profile name",
                      "description": "The diagnostic settings profile name"
                    },
                    "defaultValue": "setbypolicy"
                  },
                  "metricsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable metrics",
                      "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  },
                  "logsEnabled": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Enable logs",
                      "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                    },
                    "allowedValues": [
                      "True",
                      "False"
                    ],
                    "defaultValue": "True"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Web/sites"
                      },
                      {
                        "value": "[field('kind')]",
                        "notContains": "functionapp"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "profileName": {
                                "type": "string"
                              },
                              "metricsEnabled": {
                                "type": "string"
                              },
                              "logsEnabled": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": "[parameters('metricsEnabled')]",
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AppServiceAntivirusScanAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceHTTPLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceConsoleLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceHTTPLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceAppLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceFileAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServiceIPSecAuditLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    },
                                    {
                                      "category": "AppServicePlatformLogs",
                                      "enabled": "[parameters('logsEnabled')]"
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            },
                            "profileName": {
                              "value": "[parameters('profileName')]"
                            },
                            "metricsEnabled": {
                              "value": "[parameters('metricsEnabled')]"
                            },
                            "logsEnabled": {
                              "value": "[parameters('logsEnabled')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS Zone Group for Storage-Blob Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "blob"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "storageBlob-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-File-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-File-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS  Zone Group for Storage-File Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "file"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "storageFile-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS  Zone Group for Key Vault Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "vault"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "keyVault-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS  Zone Group for Storage-Queue Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "queue"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "storageQueue-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS  Zone Group for SQL Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "sqlServer"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "sqlServer-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-DNSZoneGroup-For-Table-PrivateEndpoint",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint",
              "ResourceName": "Deploy-DNSZoneGroup-For-Table-PrivateEndpoint",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint",
              "Properties": {
                "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                "DisplayName": "Deploy DNS  Zone Group for Storage-Blob Private Endpoint",
                "Mode": "All",
                "Parameters": {
                  "privateDnsZoneId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "privateDnsZoneId",
                      "strongType": "Microsoft.Network/privateDnsZones"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                          "where": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "equals": "table"
                          }
                        },
                        "greaterOrEquals": 1
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "privateDnsZoneId": {
                                "type": "string"
                              },
                              "privateEndpointName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                "apiVersion": "2020-03-01",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "privateDnsZoneConfigs": [
                                    {
                                      "name": "storageTable-privateDnsZone",
                                      "properties": {
                                        "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "privateDnsZoneId": {
                              "value": "[parameters('privateDnsZoneId')]"
                            },
                            "privateEndpointName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-FirewallPolicy",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy",
              "ResourceName": "Deploy-FirewallPolicy",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy",
              "Properties": {
                "Description": "Deploys Azure Firewall Manager policy in subscription where the policy is assigned.",
                "DisplayName": "Deploy Azure Firewall Manager policy in the subscription",
                "Mode": "All",
                "Parameters": {
                  "fwpolicy": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "fwpolicy",
                      "description": "Object describing Azure Firewall Policy"
                    },
                    "defaultValue": {}
                  },
                  "fwPolicyRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "fwPolicyRegion",
                      "description": "Select Azure region for Azure Firewall Policy",
                      "strongType": "location"
                    }
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/firewallPolicies",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "resourceGroupName": "[parameters('rgName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "fwPolicy": {
                              "value": "[parameters('fwPolicy')]"
                            },
                            "fwPolicyRegion": {
                              "value": "[parameters('fwPolicyRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "rgName": {
                                "type": "string"
                              },
                              "fwPolicy": {
                                "type": "object"
                              },
                              "fwPolicyRegion": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "fwpolicies",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/firewallPolicies",
                                        "apiVersion": "2019-09-01",
                                        "name": "[parameters('fwpolicy').firewallPolicyName]",
                                        "location": "[parameters('fwpolicy').location]",
                                        "dependsOn": [],
                                        "tags": {},
                                        "properties": {},
                                        "resources": [
                                          {
                                            "type": "ruleGroups",
                                            "apiVersion": "2019-09-01",
                                            "name": "[parameters('fwpolicy').ruleGroups.name]",
                                            "dependsOn": [
                                              "[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]"
                                            ],
                                            "properties": {
                                              "priority": "[parameters('fwpolicy').ruleGroups.properties.priority]",
                                              "rules": "[parameters('fwpolicy').ruleGroups.properties.rules]"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-HUB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB",
              "ResourceName": "Deploy-HUB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB",
              "Properties": {
                "Description": "Deploys Virtual Network to be used as hub virtual network in desired region in the subscription where this policy is assigned.",
                "DisplayName": "Deploy Virtual Network to be used as hub virtual network in desired region",
                "Mode": "All",
                "Parameters": {
                  "hubName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "hubName",
                      "description": "Name of the Hub"
                    }
                  },
                  "HUB": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "HUB",
                      "description": "Object describing HUB"
                    }
                  },
                  "vpngw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "vpngw",
                      "description": "Object describing VPN gateway"
                    },
                    "defaultValue": {}
                  },
                  "ergw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "ergw",
                      "description": "Object describing ExpressRoute gateway"
                    },
                    "defaultValue": {}
                  },
                  "azfw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "ergw",
                      "description": "Object describing ExpressRoute gateway"
                    },
                    "defaultValue": {}
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/virtualNetworks",
                      "name": "[parameters('hubName')]",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "ResourceGroupName": "[parameters('rgName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "hubName": {
                              "value": "[parameters('hubName')]"
                            },
                            "HUB": {
                              "value": "[parameters('HUB')]"
                            },
                            "vpngw": {
                              "value": "[parameters('vpngw')]"
                            },
                            "ergw": {
                              "value": "[parameters('ergw')]"
                            },
                            "azfw": {
                              "value": "[parameters('azfw')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "hubName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of the HUB"
                                }
                              },
                              "HUB": {
                                "type": "object",
                                "metadata": {
                                  "description": "Object describing HUB"
                                }
                              },
                              "vpngw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing VPN gateway"
                                }
                              },
                              "ergw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing ExpressRoute gateway"
                                }
                              },
                              "azfw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing the Azure Firewall"
                                }
                              },
                              "rgName": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "rgName",
                                  "description": "Provide name for resource group."
                                }
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2020-06-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat(parameters('hubName'),'-', parameters('HUB').location)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https: //schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "name": "[parameters('hubName')]",
                                        "type": "Microsoft.Network/virtualNetworks",
                                        "apiVersion": "2020-04-01",
                                        "location": "[parameters('HUB').location]",
                                        "properties": {
                                          "addressSpace": {
                                            "addressPrefixes": [
                                              "[parameters('HUB').addressPrefix]"
                                            ]
                                          },
                                          "subnets": [
                                            {
                                              "name": "Infrastructure",
                                              "properties": {
                                                "addressPrefix": "[if(not(empty(parameters('HUB').subnets.infra)),parameters('HUB').subnets.infra, json('null'))]"
                                              }
                                            },
                                            {
                                              "name": "AzureFirewallSubnet",
                                              "properties": {
                                                "addressPrefix": "[if(not(empty(parameters('HUB').subnets.azfw)),parameters('HUB').subnets.azfw, json('null'))]"
                                              }
                                            },
                                            {
                                              "name": "GatewaySubnet",
                                              "properties": {
                                                "addressPrefix": "[if(not(empty(parameters('HUB').subnets.gw)),parameters('HUB').subnets.gw, json('null'))]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "condition": "[greater(length(parameters('vpngw')),0)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                ],
                                "name": "[concat(parameters('hubName'),'-vpngw')]",
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/publicIpAddresses",
                                        "location": "[parameters('HUB').location]",
                                        "name": "[concat(parameters('vpngw').name,'-pip')]",
                                        "properties": {
                                          "publicIPAllocationMethod": "Dynamic"
                                        },
                                        "tags": {}
                                      },
                                      {
                                        "apiVersion": "2020-05-01",
                                        "name": "[parameters('vpngw').name]",
                                        "type": "Microsoft.Network/virtualNetworkGateways",
                                        "location": "[parameters('HUB').location]",
                                        "dependsOn": [
                                          "[concat('Microsoft.Network/publicIPAddresses/', parameters('vpngw').name,'-pip')]"
                                        ],
                                        "tags": {},
                                        "properties": {
                                          "gatewayType": "Vpn",
                                          "vpnType": "[parameters('vpngw').vpnType]",
                                          "ipConfigurations": [
                                            {
                                              "name": "default",
                                              "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/GatewaySubnet')]"
                                                },
                                                "publicIpAddress": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('vpngw').name,'-pip')]"
                                                }
                                              }
                                            }
                                          ],
                                          "sku": {
                                            "name": "[parameters('vpngw').sku]",
                                            "tier": "[parameters('vpngw').sku]"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "condition": "[greater(length(parameters('ergw')),0)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                ],
                                "name": "[concat(parameters('hubName'),'-ergw')]",
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/publicIpAddresses",
                                        "location": "[parameters('HUB').location]",
                                        "name": "[concat(parameters('ergw').name,'-pip')]",
                                        "properties": {
                                          "publicIPAllocationMethod": "Dynamic"
                                        },
                                        "tags": {}
                                      },
                                      {
                                        "apiVersion": "2020-05-01",
                                        "name": "[parameters('ergw').name]",
                                        "type": "Microsoft.Network/virtualNetworkGateways",
                                        "location": "[parameters('HUB').location]",
                                        "dependsOn": [
                                          "[concat('Microsoft.Network/publicIPAddresses/', parameters('ergw').name,'-pip')]"
                                        ],
                                        "tags": {},
                                        "properties": {
                                          "gatewayType": "ExpressRoute",
                                          "ipConfigurations": [
                                            {
                                              "name": "default",
                                              "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/GatewaySubnet')]"
                                                },
                                                "publicIpAddress": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('ergw').name,'-pip')]"
                                                }
                                              }
                                            }
                                          ],
                                          "sku": {
                                            "name": "[parameters('ergw').sku]",
                                            "tier": "[parameters('ergw').sku]"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "condition": "[greater(length(parameters('azfw')),0)]",
                                "name": "[concat(parameters('hubName'),'-azfw')]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/publicIpAddresses",
                                        "name": "[concat(parameters('azfw').name,'-pip')]",
                                        "location": "[parameters('azfw').location]",
                                        "sku": {
                                          "name": "Standard"
                                        },
                                        "zones": "[if(contains(parameters('azfw'),'pipZones'),parameters('azfw').pipZones,json('null'))]",
                                        "properties": {
                                          "publicIPAllocationMethod": "Static"
                                        },
                                        "tags": {}
                                      },
                                      {
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/azureFirewalls",
                                        "name": "[parameters('azfw').name]",
                                        "location": "[parameters('azfw').location]",
                                        "zones": "[if(contains(parameters('azfw'),'fwZones'),parameters('azfw').fwZones,json('null'))]",
                                        "dependsOn": [
                                          "[concat(parameters('azfw').name,'-pip')]"
                                        ],
                                        "properties": {
                                          "threatIntelMode": "[parameters('azfw').threatIntelMode]",
                                          "additionalProperties": "[if(contains(parameters('azfw'),'additionalProperties'),parameters('azfw').additionalProperties,json('null'))]",
                                          "sku": "[if(contains(parameters('azfw'),'sku'),parameters('azfw').sku,json('null'))]",
                                          "ipConfigurations": [
                                            {
                                              "name": "[concat(parameters('azfw').name,'-pip')]",
                                              "properties": {
                                                "subnet": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/AzureFirewallSubnet')]"
                                                },
                                                "publicIPAddress": {
                                                  "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('azfw').name,'-pip')]"
                                                }
                                              }
                                            }
                                          ],
                                          "firewallPolicy": "[if(contains(parameters('azfw'),'firewallPolicy'),parameters('azfw').firewallPolicy,json('null'))]"
                                        },
                                        "tags": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-LA-Config",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config",
              "ResourceName": "Deploy-LA-Config",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config",
              "Properties": {
                "Description": "Deploy the configurations to the Log Analytics in the subscription. This includes a list of solutions like update, automation etc and  enables the vminsight counters. ",
                "DisplayName": "Deploy the configurations to the Log Analytics in the subscription",
                "Mode": "All",
                "Parameters": {
                  "workspaceName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "workspaceName",
                      "description": "Provide name of existing Log Analytics workspace"
                    }
                  },
                  "workspaceRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "workspaceRegion",
                      "description": "Select region of existing Log Analytics workspace"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.OperationalInsights/workspaces"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "deploymentScope": "resourceGroup",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('workspaceName')]"
                          },
                          {
                            "field": "location",
                            "equals": "[parameters('workspaceRegion')]"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "workspaceName": {
                              "value": "[parameters('workspaceName')]"
                            },
                            "workspaceRegion": {
                              "value": "[parameters('workspaceRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "workspaceName": {
                                "type": "string"
                              },
                              "workspaceRegion": {
                                "type": "string"
                              }
                            },
                            "variables": {
                              "vmInsightsPerfCounters": {
                                "windowsArray": [
                                  {
                                    "armName": "counter1",
                                    "objectName": "LogicalDisk",
                                    "counterName": "% Free Space",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter2",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Avg. Disk sec/Read",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter3",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Avg. Disk sec/Transfer",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter4",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Avg. Disk sec/Write",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter5",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Disk Read Bytes/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter6",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Disk Reads/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter7",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Disk Transfers/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter8",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Disk Write Bytes/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter9",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Disk Writes/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter10",
                                    "objectName": "LogicalDisk",
                                    "counterName": "Free Megabytes",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter11",
                                    "objectName": "Memory",
                                    "counterName": "Available MBytes",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter12",
                                    "objectName": "Network Adapter",
                                    "counterName": "Bytes Received/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter13",
                                    "objectName": "Network Adapter",
                                    "counterName": "Bytes Sent/sec",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  {
                                    "armName": "counter14",
                                    "objectName": "Processor",
                                    "counterName": "% Processor Time",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  }
                                ],
                                "linuxDiskArray": [
                                  {
                                    "counterName": "% Used Inodes"
                                  },
                                  {
                                    "counterName": "Free Megabytes"
                                  },
                                  {
                                    "counterName": "% Used Space"
                                  },
                                  {
                                    "counterName": "Disk Transfers/sec"
                                  },
                                  {
                                    "counterName": "Disk Reads/sec"
                                  },
                                  {
                                    "counterName": "Disk writes/sec"
                                  }
                                ],
                                "linuxDiskObject": {
                                  "armResourceName": "Disk",
                                  "objectName": "Logical Disk",
                                  "instanceName": "*",
                                  "intervalSeconds": 10
                                },
                                "linuxMemoryArray": [
                                  {
                                    "counterName": "Available MBytes Memory"
                                  }
                                ],
                                "linuxMemoryObject": {
                                  "armResourceName": "Memory",
                                  "objectName": "Memory",
                                  "instanceName": "*",
                                  "intervalSeconds": 10
                                },
                                "linuxNetworkArray": [
                                  {
                                    "counterName": "Total Bytes Received"
                                  },
                                  {
                                    "counterName": "Total Bytes Transmitted"
                                  }
                                ],
                                "linuxNetworkObject": {
                                  "armResourceName": "Network",
                                  "objectName": "Network",
                                  "instanceName": "*",
                                  "intervalSeconds": 10
                                },
                                "linuxCpuArray": [
                                  {
                                    "counterName": "% Processor Time"
                                  }
                                ],
                                "linuxCpuObject": {
                                  "armResourceName": "Processor",
                                  "objectName": "Processor",
                                  "instanceName": "*",
                                  "intervalSeconds": 10
                                }
                              },
                              "batch1": {
                                "solutions": [
                                  {
                                    "name": "[concat('Security', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "Security"
                                  },
                                  {
                                    "name": "[concat('AgentHealthAssessment', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "AgentHealthAssessment"
                                  },
                                  {
                                    "name": "[concat('ChangeTracking', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "ChangeTracking"
                                  },
                                  {
                                    "name": "[concat('Updates', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "Updates"
                                  },
                                  {
                                    "name": "[concat('AzureActivity', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "AzureActivity"
                                  },
                                  {
                                    "name": "[concat('AzureAutomation', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "AzureAutomation"
                                  },
                                  {
                                    "name": "[concat('ADAssessment', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "ADAssessment"
                                  },
                                  {
                                    "name": "[concat('SQLAssessment', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "SQLAssessment"
                                  },
                                  {
                                    "name": "[concat('VMInsights', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "VMInsights"
                                  },
                                  {
                                    "name": "[concat('ServiceMap', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "ServiceMap"
                                  },
                                  {
                                    "name": "[concat('SecurityInsights', '(', parameters('workspaceName'), ')')]",
                                    "marketplaceName": "SecurityInsights"
                                  }
                                ]
                              }
                            },
                            "resources": [
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/datasources",
                                "name": "[concat(parameters('workspaceName'), '/LinuxPerfCollection')]",
                                "kind": "LinuxPerformanceCollection",
                                "properties": {
                                  "state": "Enabled"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxDiskObject.armResourceName)]",
                                "kind": "LinuxPerformanceObject",
                                "properties": {
                                  "performanceCounters": "[variables('vmInsightsPerfCounters').linuxDiskArray]",
                                  "objectName": "[variables('vmInsightsPerfCounters').linuxDiskObject.objectName]",
                                  "instanceName": "[variables('vmInsightsPerfCounters').linuxDiskObject.instanceName]",
                                  "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxDiskObject.intervalSeconds]"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxMemoryObject.armResourceName)]",
                                "kind": "LinuxPerformanceObject",
                                "properties": {
                                  "performanceCounters": "[variables('vmInsightsPerfCounters').linuxMemoryArray]",
                                  "objectName": "[variables('vmInsightsPerfCounters').linuxMemoryObject.objectName]",
                                  "instanceName": "[variables('vmInsightsPerfCounters').linuxMemoryObject.instanceName]",
                                  "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxMemoryObject.intervalSeconds]"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxCpuObject.armResourceName)]",
                                "kind": "LinuxPerformanceObject",
                                "properties": {
                                  "performanceCounters": "[variables('vmInsightsPerfCounters').linuxCpuArray]",
                                  "objectName": "[variables('vmInsightsPerfCounters').linuxCpuObject.objectName]",
                                  "instanceName": "[variables('vmInsightsPerfCounters').linuxCpuObject.instanceName]",
                                  "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxCpuObject.intervalSeconds]"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxNetworkObject.armResourceName)]",
                                "kind": "LinuxPerformanceObject",
                                "properties": {
                                  "performanceCounters": "[variables('vmInsightsPerfCounters').linuxNetworkArray]",
                                  "objectName": "[variables('vmInsightsPerfCounters').linuxNetworkObject.objectName]",
                                  "instanceName": "[variables('vmInsightsPerfCounters').linuxNetworkObject.instanceName]",
                                  "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxNetworkObject.intervalSeconds]"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').windowsArray[copyIndex()].armName)]",
                                "kind": "WindowsPerformanceCounter",
                                "copy": {
                                  "name": "counterCopy",
                                  "count": "[length(variables('vmInsightsPerfCounters').windowsArray)]"
                                },
                                "properties": {
                                  "objectName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].objectName]",
                                  "instanceName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].instanceName]",
                                  "intervalSeconds": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].intervalSeconds]",
                                  "counterName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].counterName]"
                                }
                              },
                              {
                                "apiVersion": "2015-11-01-preview",
                                "type": "Microsoft.OperationsManagement/solutions",
                                "name": "[concat(variables('batch1').solutions[copyIndex()].Name)]",
                                "location": "[parameters('workspaceRegion')]",
                                "copy": {
                                  "name": "solutionCopy",
                                  "count": "[length(variables('batch1').solutions)]"
                                },
                                "properties": {
                                  "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                },
                                "plan": {
                                  "name": "[variables('batch1').solutions[copyIndex()].name]",
                                  "product": "[concat('OMSGallery/', variables('batch1').solutions[copyIndex()].marketplaceName)]",
                                  "promotionCode": "",
                                  "publisher": "Microsoft"
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Log-Analytics",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics",
              "ResourceName": "Deploy-Log-Analytics",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics",
              "Properties": {
                "Description": "Deploys Log Analytics and Automation account to the subscription where the policy is assigned.",
                "DisplayName": "Deploy the Log Analytics in the subscription",
                "Mode": "All",
                "Parameters": {
                  "workspaceName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "workspaceName",
                      "description": "Provide name for log analytics workspace"
                    }
                  },
                  "automationAccountName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "automationAccountName",
                      "description": "Provide name for automation account"
                    }
                  },
                  "workspaceRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "workspaceRegion",
                      "description": "Select Azure region for Log Analytics"
                    }
                  },
                  "automationRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "automationRegion",
                      "description": "Select Azure region for Automation account"
                    }
                  },
                  "retentionInDays": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Data retention",
                      "description": "Select data retention (days) for Log Analytics."
                    },
                    "defaultValue": "30"
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('workspaceName')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "retentionInDays": {
                              "value": "[parameters('retentionInDays')]"
                            },
                            "workspaceName": {
                              "value": "[parameters('workspaceName')]"
                            },
                            "workspaceRegion": {
                              "value": "[parameters('workspaceRegion')]"
                            },
                            "automationAccountName": {
                              "value": "[parameters('automationAccountName')]"
                            },
                            "automationRegion": {
                              "value": "[parameters('automationRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "rgName": {
                                "type": "string"
                              },
                              "workspaceName": {
                                "type": "string"
                              },
                              "workspaceRegion": {
                                "type": "string"
                              },
                              "automationAccountName": {
                                "type": "string"
                              },
                              "automationRegion": {
                                "type": "string"
                              },
                              "retentionInDays": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "log-analytics",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiversion": "2015-10-31",
                                        "location": "[parameters('AutomationRegion')]",
                                        "name": "[parameters('AutomationAccountName')]",
                                        "type": "Microsoft.Automation/automationAccounts",
                                        "comments": "Automation account for ",
                                        "properties": {
                                          "sku": {
                                            "name": "OMS"
                                          }
                                        }
                                      },
                                      {
                                        "apiVersion": "2017-03-15-preview",
                                        "location": "[parameters('workspaceRegion')]",
                                        "name": "[parameters('workspaceName')]",
                                        "type": "Microsoft.OperationalInsights/workspaces",
                                        "properties": {
                                          "sku": {
                                            "name": "pernode"
                                          },
                                          "enableLogAccessUsingOnlyResourcePermissions": true,
                                          "retentionInDays": "[int(parameters('retentionInDays'))]"
                                        },
                                        "resources": [
                                          {
                                            "name": "Automation",
                                            "type": "linkedServices",
                                            "apiVersion": "2015-11-01-preview",
                                            "dependsOn": [
                                              "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                                              "[resourceId('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                            ],
                                            "properties": {
                                              "resourceId": "[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Nsg-FlowLogs",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
              "ResourceName": "Deploy-Nsg-FlowLogs",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
              "Properties": {
                "Description": "Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.",
                "DisplayName": "Deploys NSG flow logs and traffic analytics",
                "Mode": "All",
                "Parameters": {
                  "retention": {
                    "type": "Integer",
                    "metadata": {
                      "displayName": "Retention"
                    },
                    "defaultValue": 5
                  },
                  "storageAccountResourceId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Storage Account Resource Id",
                      "strongType": "Microsoft.Storage/storageAccounts"
                    }
                  },
                  "trafficAnalyticsInterval": {
                    "type": "Integer",
                    "metadata": {
                      "displayName": "Traffic Analytics processing interval mins (10/60)"
                    },
                    "defaultValue": 60
                  },
                  "flowAnalyticsEnabled": {
                    "type": "Boolean",
                    "metadata": {
                      "displayName": "Enable Traffic Analytics"
                    },
                    "defaultValue": false
                  },
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "strongType": "omsWorkspace",
                      "displayName": "Resource ID of Log Analytics workspace",
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                    },
                    "defaultValue": ""
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/networkWatchers/flowLogs",
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ],
                      "resourceGroupName": "NetworkWatcherRG",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                            "equals": "[parameters('flowAnalyticsEnabled')]"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "networkSecurityGroupName": {
                              "value": "[field('name')]"
                            },
                            "resourceGroupName": {
                              "value": "[resourceGroup().name]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "storageAccountResourceId": {
                              "value": "[parameters('storageAccountResourceId')]"
                            },
                            "retention": {
                              "value": "[parameters('retention')]"
                            },
                            "flowAnalyticsEnabled": {
                              "value": "[parameters('flowAnalyticsEnabled')]"
                            },
                            "trafficAnalyticsInterval": {
                              "value": "[parameters('trafficAnalyticsInterval')]"
                            },
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "networkSecurityGroupName": {
                                "type": "string"
                              },
                              "resourceGroupName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "storageAccountResourceId": {
                                "type": "string"
                              },
                              "retention": {
                                "type": "int"
                              },
                              "flowAnalyticsEnabled": {
                                "type": "bool"
                              },
                              "trafficAnalyticsInterval": {
                                "type": "int"
                              },
                              "logAnalytics": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/networkWatchers/flowLogs",
                                "apiVersion": "2020-05-01",
                                "name": "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "targetResourceId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                                  "storageId": "[parameters('storageAccountResourceId')]",
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": "[parameters('retention')]"
                                  },
                                  "format": {
                                    "type": "JSON",
                                    "version": 2
                                  },
                                  "flowAnalyticsConfiguration": {
                                    "networkWatcherFlowAnalyticsConfiguration": {
                                      "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
                                      "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]",
                                      "workspaceId": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                                      "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                      "workspaceResourceId": "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                    }
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Sql-AuditingSettings",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
              "ResourceName": "Deploy-Sql-AuditingSettings",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
              "Properties": {
                "Description": "Deploy auditing settings to SQL Database when it not exist in the deployment",
                "DisplayName": "Deploy SQL database auditing settings",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/databases"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Sql/servers/databases/auditingSettings",
                      "name": "default",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Sql/servers/databases/auditingSettings/state",
                            "equals": "enabled"
                          },
                          {
                            "field": "Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled",
                            "equals": "true"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "location": {
                                "type": "string"
                              },
                              "sqlServerName": {
                                "type": "string"
                              },
                              "sqlServerDataBaseName": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                "type": "Microsoft.Sql/servers/databases/auditingSettings",
                                "apiVersion": "2017-03-01-preview",
                                "properties": {
                                  "state": "enabled",
                                  "auditActionsAndGroups": [
                                    "BATCH_COMPLETED_GROUP",
                                    "DATABASE_OBJECT_CHANGE_GROUP",
                                    "SCHEMA_OBJECT_CHANGE_GROUP",
                                    "BACKUP_RESTORE_GROUP",
                                    "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
                                    "DATABASE_PRINCIPAL_CHANGE_GROUP",
                                    "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
                                    "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
                                    "USER_CHANGE_PASSWORD_GROUP",
                                    "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
                                    "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
                                    "DATABASE_PERMISSION_CHANGE_GROUP",
                                    "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
                                    "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                                    "FAILED_DATABASE_AUTHENTICATION_GROUP"
                                  ],
                                  "isAzureMonitorTargetEnabled": true
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "location": {
                              "value": "[field('location')]"
                            },
                            "sqlServerName": {
                              "value": "[first(split(field('fullname'),'/'))]"
                            },
                            "sqlServerDataBaseName": {
                              "value": "[field('name')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Sql-SecurityAlertPolicies",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
              "ResourceName": "Deploy-Sql-SecurityAlertPolicies",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
              "Properties": {
                "Description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration",
                "DisplayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/databases"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Sql/servers/databases/securityAlertPolicies/state",
                            "equals": "Enabled"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "location": {
                                "type": "string"
                              },
                              "sqlServerName": {
                                "type": "string"
                              },
                              "sqlServerDataBaseName": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                                "apiVersion": "2018-06-01-preview",
                                "properties": {
                                  "state": "Enabled",
                                  "disabledAlerts": [
                                    ""
                                  ],
                                  "emailAddresses": [
                                    "admin@contoso.com"
                                  ],
                                  "emailAccountAdmins": true,
                                  "storageEndpoint": null,
                                  "storageAccountAccessKey": "",
                                  "retentionDays": 0
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "location": {
                              "value": "[field('location')]"
                            },
                            "sqlServerName": {
                              "value": "[first(split(field('fullname'),'/'))]"
                            },
                            "sqlServerDataBaseName": {
                              "value": "[field('name')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Sql-Tde",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
              "ResourceName": "Deploy-Sql-Tde",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
              "Properties": {
                "Description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment",
                "DisplayName": "Deploy SQL Database Transparent Data Encryption ",
                "Mode": "All",
                "Parameters": {
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/databases"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Sql/transparentDataEncryption.status",
                            "equals": "Enabled"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "location": {
                                "type": "string"
                              },
                              "sqlServerName": {
                                "type": "string"
                              },
                              "sqlServerDataBaseName": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/current')]",
                                "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                                "apiVersion": "2014-04-01",
                                "properties": {
                                  "status": "Enabled"
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "location": {
                              "value": "[field('location')]"
                            },
                            "sqlServerName": {
                              "value": "[first(split(field('fullname'),'/'))]"
                            },
                            "sqlServerDataBaseName": {
                              "value": "[field('name')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Sql-vulnerabilityAssessments",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
              "ResourceName": "Deploy-Sql-vulnerabilityAssessments",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
              "Properties": {
                "Description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters",
                "DisplayName": "Deploy SQL Database vulnerability Assessments",
                "Mode": "All",
                "Parameters": {
                  "vulnerabilityAssessmentsEmail": {
                    "type": "String",
                    "metadata": {
                      "description": "The email address to send alerts",
                      "displayName": "The email address to send alerts"
                    }
                  },
                  "vulnerabilityAssessmentsStorageID": {
                    "type": "String",
                    "metadata": {
                      "description": "The storage account to store assessments",
                      "displayName": "The storage account to store assessments"
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers/databases"
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails",
                            "equals": "[parameters('vulnerabilityAssessmentsEmail')]"
                          },
                          {
                            "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
                            "equals": true
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "location": {
                                "type": "string"
                              },
                              "sqlServerName": {
                                "type": "string"
                              },
                              "sqlServerDataBaseName": {
                                "type": "string"
                              },
                              "vulnerabilityAssessmentsEmail": {
                                "type": "string"
                              },
                              "vulnerabilityAssessmentsStorageID": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                                "apiVersion": "2017-03-01-preview",
                                "properties": {
                                  "storageContainerPath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                                  "storageAccountAccessKey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                                  "recurringScans": {
                                    "isEnabled": true,
                                    "emailSubscriptionAdmins": false,
                                    "emails": [
                                      "[parameters('vulnerabilityAssessmentsEmail')]"
                                    ]
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "location": {
                              "value": "[field('location')]"
                            },
                            "sqlServerName": {
                              "value": "[first(split(field('fullname'),'/'))]"
                            },
                            "sqlServerDataBaseName": {
                              "value": "[field('name')]"
                            },
                            "vulnerabilityAssessmentsEmail": {
                              "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                            },
                            "vulnerabilityAssessmentsStorageID": {
                              "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                        "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-vHUB",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB",
              "ResourceName": "Deploy-vHUB",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB",
              "Properties": {
                "Description": "Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured in the desired region. ",
                "DisplayName": "Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured.",
                "Mode": "All",
                "Parameters": {
                  "vwanname": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vwanname",
                      "description": "Name of the Virtual WAN"
                    }
                  },
                  "vHubName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vHubName",
                      "description": "Name of the vHUB"
                    },
                    "defaultValue": ""
                  },
                  "vHUB": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "vHUB",
                      "description": "Object describing Virtual WAN vHUB"
                    }
                  },
                  "vpngw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "vpngw",
                      "description": "Object describing VPN gateway"
                    },
                    "defaultValue": {}
                  },
                  "ergw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "ergw",
                      "description": "Object describing ExpressRoute gateway"
                    },
                    "defaultValue": {}
                  },
                  "azfw": {
                    "type": "Object",
                    "metadata": {
                      "displayName": "azfw",
                      "description": "Object describing the Azure Firewall in vHUB"
                    },
                    "defaultValue": {}
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/virtualHubs",
                      "name": "[parameters('vHubName')]",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "ResourceGroupName": "[parameters('rgName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "vwanname": {
                              "value": "[parameters('vwanname')]"
                            },
                            "vHUB": {
                              "value": "[parameters('vHUB')]"
                            },
                            "vpngw": {
                              "value": "[parameters('vpngw')]"
                            },
                            "ergw": {
                              "value": "[parameters('ergw')]"
                            },
                            "azfw": {
                              "value": "[parameters('azfw')]"
                            },
                            "vHUBName": {
                              "value": "[parameters('vHUBName')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vwanname": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of the Virtual WAN"
                                }
                              },
                              "vHUB": {
                                "type": "object",
                                "metadata": {
                                  "description": "Object describing Virtual WAN vHUB"
                                }
                              },
                              "vpngw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing VPN gateway"
                                }
                              },
                              "ergw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing ExpressRoute gateway"
                                }
                              },
                              "azfw": {
                                "type": "object",
                                "defaultValue": {},
                                "metadata": {
                                  "description": "Object describing the Azure Firewall in vHUB"
                                }
                              },
                              "rgName": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "rgName",
                                  "description": "Provide name for resource group."
                                }
                              },
                              "vHUBName": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "vHUBName",
                                  "description": "Name of the vHUB"
                                }
                              }
                            },
                            "variables": {
                              "vhubsku": "Standard",
                              "vwanresourceid": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'),'/providers/Microsoft.Network/virtualWans/',parameters('vwanname'))]",
                              "vwanhub": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'),'/providers/Microsoft.Network/virtualHubs/',parameters('vHUBName'))]"
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "[concat('vHUBdeploy-',parameters('vHUB').location)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/virtualHubs",
                                        "apiVersion": "2020-05-01",
                                        "location": "[parameters('vHUB').location]",
                                        "name": "[parameters('vHUBname')]",
                                        "properties": {
                                          "virtualWan": {
                                            "id": "[variables('vwanresourceid')]"
                                          },
                                          "addressPrefix": "[parameters('vHUB').addressPrefix]",
                                          "sku": "[variables('vhubsku')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "condition": "[greater(length(parameters('vpngw')),0)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[concat('vHUBdeploy-',parameters('vHUB').location)]"
                                ],
                                "name": "[concat(parameters('vHUBName'),'-vpngw')]",
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/vpnGateways",
                                        "apiVersion": "2020-05-01",
                                        "location": "[parameters('vHUB').location]",
                                        "name": "[parameters('vpngw').name]",
                                        "properties": {
                                          "virtualHub": {
                                            "id": "[variables('vwanhub')]"
                                          },
                                          "bgpSettings": "[parameters('vpngw').bgpSettings]",
                                          "vpnGatewayScaleUnit": "[parameters('vpngw').vpnGatewayScaleUnit]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "condition": "[greater(length(parameters('ergw')),0)]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[concat('vHUBdeploy-',parameters('vHUB').location)]"
                                ],
                                "name": "[concat(parameters('vHUBName'),'-ergw')]",
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/expressRouteGateways",
                                        "apiVersion": "2020-05-01",
                                        "location": "[parameters('vHUB').location]",
                                        "name": "[parameters('ergw').name]",
                                        "properties": {
                                          "virtualHub": {
                                            "id": "[variables('vwanhub')]"
                                          },
                                          "autoScaleConfiguration": "[parameters('ergw').autoScaleConfiguration]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-vNet",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet",
              "ResourceName": "Deploy-vNet",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet",
              "Properties": {
                "Description": "Deploy spoke network with configuration to hub network based on ipam configuration object",
                "DisplayName": "Deploy spoke network with configuration to hub network based on ipam configuration object",
                "Mode": "All",
                "Parameters": {
                  "ipam": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "ipam",
                      "description": null
                    },
                    "defaultValue": []
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Resources/resourceGroups",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                          },
                          {
                            "field": "name",
                            "like": "[concat(subscription().displayName, '-network')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "ipam": {
                              "value": "[parameters('ipam')]",
                              "defaultValue": []
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "ipam": {
                                "defaultValue": [
                                  {
                                    "name": "bu1-weu-msx3-vNet1",
                                    "location": "westeurope",
                                    "virtualNetworks": {
                                      "properties": {
                                        "addressSpace": {
                                          "addressPrefixes": [
                                            "10.51.217.0/24"
                                          ]
                                        }
                                      }
                                    },
                                    "networkSecurityGroups": {
                                      "properties": {
                                        "securityRules": []
                                      }
                                    },
                                    "routeTables": {
                                      "properties": {
                                        "routes": []
                                      }
                                    },
                                    "hubVirtualNetworkConnection": {
                                      "vWanVhubResourceId": "/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu",
                                      "properties": {
                                        "allowHubToRemoteVnetTransit": true,
                                        "allowRemoteVnetToUseHubVnetGateways": false,
                                        "enableInternetSecurity": true
                                      }
                                    }
                                  }
                                ],
                                "type": "Array"
                              }
                            },
                            "variables": {
                              "vNetRgName": "[concat(subscription().displayName, '-network')]",
                              "vNetName": "[concat(subscription().displayName, '-vNet')]",
                              "vNetSubId": "[subscription().subscriptionId]"
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]",
                                "location": "[parameters('ipam')[copyIndex()].location]",
                                "dependsOn": [],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "[variables('vNetRgName')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": {}
                                      },
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "NetworkWatcherRG",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": {}
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                },
                                "copy": {
                                  "name": "ipam-rg-loop",
                                  "count": "[length(parameters('ipam'))]"
                                },
                                "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-ipam-',subscription().displayName,'-nsg-udr-vnet-hub-vwan-peering-',copyIndex())]",
                                "dependsOn": [
                                  "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'networkSecurityGroups')]",
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/networkSecurityGroups",
                                        "name": "[concat(subscription().displayName, '-nsg')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'networkSecurityGroups'),parameters('ipam')[copyIndex()].networkSecurityGroups.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'routeTables')]",
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/routeTables",
                                        "name": "[concat(subscription().displayName, '-udr')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'routeTables'),parameters('ipam')[copyIndex()].routeTables.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworks')]",
                                        "type": "Microsoft.Network/virtualNetworks",
                                        "apiVersion": "2020-05-01",
                                        "name": "[concat(subscription().displayName, '-vnet')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-nsg')]",
                                          "[concat(subscription().displayName, '-udr')]"
                                        ],
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),parameters('ipam')[copyIndex()].virtualNetworks.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings')]",
                                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                        "apiVersion": "2020-05-01",
                                        "name": "[concat(variables('vNetName'), '/peerToHub')]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId'))]",
                                        "type": "Microsoft.Resources/deployments",
                                        "apiVersion": "2020-06-01",
                                        "name": "[concat('es-ipam-vWan-',subscription().displayName,'-peering-',copyIndex())]",
                                        "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[2],json('null'))]",
                                        "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[4],json('null'))]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": {
                                          "mode": "Incremental",
                                          "expressionEvaluationOptions": {
                                            "scope": "inner"
                                          },
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "type": "string"
                                              },
                                              "vWanVhubName": {
                                                "Type": "string",
                                                "defaultValue": ""
                                              },
                                              "allowHubToRemoteVnetTransit": {
                                                "Type": "bool",
                                                "defaultValue": true
                                              },
                                              "allowRemoteVnetToUseHubVnetGateways": {
                                                "Type": "bool",
                                                "defaultValue": false
                                              },
                                              "enableInternetSecurity": {
                                                "Type": "bool",
                                                "defaultValue": true
                                              }
                                            },
                                            "variables": {},
                                            "resources": [
                                              {
                                                "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                                                "apiVersion": "2020-05-01",
                                                "name": "[[concat(parameters('vWanVhubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                "properties": {
                                                  "remoteVirtualNetwork": {
                                                    "id": "[[parameters('remoteVirtualNetwork')]"
                                                  },
                                                  "allowHubToRemoteVnetTransit": "[[parameters('allowHubToRemoteVnetTransit')]",
                                                  "allowRemoteVnetToUseHubVnetGateways": "[[parameters('allowRemoteVnetToUseHubVnetGateways')]",
                                                  "enableInternetSecurity": "[[parameters('enableInternetSecurity')]"
                                                }
                                              }
                                            ],
                                            "outputs": {}
                                          },
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                            },
                                            "vWanVhubName": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[8],json('null'))]"
                                            },
                                            "allowHubToRemoteVnetTransit": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json('null'))]"
                                            },
                                            "allowRemoteVnetToUseHubVnetGateways": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json('null'))]"
                                            },
                                            "enableInternetSecurity": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json('null'))]"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id'))]",
                                        "type": "Microsoft.Resources/deployments",
                                        "apiVersion": "2020-06-01",
                                        "name": "[concat('es-ipam-hub-',subscription().displayName,'-peering-',copyIndex())]",
                                        "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[2],json('null'))]",
                                        "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[4],json('null'))]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": {
                                          "mode": "Incremental",
                                          "expressionEvaluationOptions": {
                                            "scope": "inner"
                                          },
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "Type": "string",
                                                "defaultValue": false
                                              },
                                              "hubName": {
                                                "Type": "string",
                                                "defaultValue": false
                                              }
                                            },
                                            "variables": {},
                                            "resources": [
                                              {
                                                "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                "apiVersion": "2020-05-01",
                                                "properties": {
                                                  "allowVirtualNetworkAccess": true,
                                                  "allowForwardedTraffic": true,
                                                  "allowGatewayTransit": true,
                                                  "useRemoteGateways": false,
                                                  "remoteVirtualNetwork": {
                                                    "id": "[[parameters('remoteVirtualNetwork')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "outputs": {}
                                          },
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                            },
                                            "hubName": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[8],json('null'))]"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                },
                                "resourceGroup": "[variables('vNetRgName')]",
                                "copy": {
                                  "name": "ipam-loop",
                                  "count": "[length(parameters('ipam'))]"
                                },
                                "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                              }
                            ],
                            "outputs": {
                              "ipam": {
                                "condition": "[bool('true')]",
                                "type": "Int",
                                "value": "[length(parameters('ipam'))]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-VNET-HubSpoke",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke",
              "ResourceName": "Deploy-VNET-HubSpoke",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke",
              "Properties": {
                "Description": "This policy deploys virtual network and peer to the hub",
                "DisplayName": "Deploys virtual network peering to hub",
                "Mode": "All",
                "Parameters": {
                  "vNetName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vNetName",
                      "description": "Name of the landing zone vNet"
                    }
                  },
                  "vNetRgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vNetRgName",
                      "description": "Name of the landing zone vNet RG"
                    }
                  },
                  "vNetLocation": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vNetLocation",
                      "description": "Location for the vNet"
                    }
                  },
                  "vNetCidrRange": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vNetCidrRange",
                      "description": "CIDR Range for the vNet"
                    }
                  },
                  "hubResourceId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "hubResourceId",
                      "description": "Resource ID for the HUB vNet"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Network/virtualNetworks",
                      "name": "[parameters('vNetName')]",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "ResourceGroupName": "[parameters('vNetRgName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('vNetName')]"
                          },
                          {
                            "field": "location",
                            "equals": "[parameters('vNetLocation')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "vNetRgName": {
                              "value": "[parameters('vNetRgName')]"
                            },
                            "vNetName": {
                              "value": "[parameters('vNetName')]"
                            },
                            "vNetLocation": {
                              "value": "[parameters('vNetLocation')]"
                            },
                            "vNetCidrRange": {
                              "value": "[parameters('vNetCidrRange')]"
                            },
                            "hubResourceId": {
                              "value": "[parameters('hubResourceId')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vNetRgName": {
                                "type": "string"
                              },
                              "vNetName": {
                                "type": "string"
                              },
                              "vNetLocation": {
                                "type": "string"
                              },
                              "vNetCidrRange": {
                                "type": "string"
                              },
                              "vNetPeerUseRemoteGateway": {
                                "type": "bool",
                                "defaultValue": false
                              },
                              "hubResourceId": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]",
                                "location": "[parameters('vNetLocation')]",
                                "dependsOn": [],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "[parameters('vNetRgName')]",
                                        "location": "[parameters('vNetLocation')]",
                                        "properties": {}
                                      },
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "NetworkWatcherRG",
                                        "location": "[parameters('vNetLocation')]",
                                        "properties": {}
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6))]",
                                "dependsOn": [
                                  "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/virtualNetworks",
                                        "apiVersion": "2020-06-01",
                                        "name": "[parameters('vNetName')]",
                                        "location": "[parameters('vNetLocation')]",
                                        "dependsOn": [],
                                        "properties": {
                                          "addressSpace": {
                                            "addressPrefixes": [
                                              "[parameters('vNetCidrRange')]"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                        "apiVersion": "2020-05-01",
                                        "name": "[concat(parameters('vNetName'), '/peerToHub')]",
                                        "dependsOn": [
                                          "[parameters('vNetName')]"
                                        ],
                                        "properties": {
                                          "remoteVirtualNetwork": {
                                            "id": "[parameters('hubResourceId')]"
                                          },
                                          "allowVirtualNetworkAccess": true,
                                          "allowForwardedTraffic": true,
                                          "allowGatewayTransit": false,
                                          "useRemoteGateways": "[parameters('vNetPeerUseRemoteGateway')]"
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Resources/deployments",
                                        "apiVersion": "2020-06-01",
                                        "name": "[concat('es-lz-hub-',substring(uniqueString(subscription().id),0,6),'-peering')]",
                                        "subscriptionId": "[split(parameters('hubResourceId'),'/')[2]]",
                                        "resourceGroup": "[split(parameters('hubResourceId'),'/')[4]]",
                                        "dependsOn": [
                                          "[parameters('vNetName')]"
                                        ],
                                        "properties": {
                                          "mode": "Incremental",
                                          "expressionEvaluationOptions": {
                                            "scope": "inner"
                                          },
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "Type": "string",
                                                "defaultValue": false
                                              },
                                              "hubName": {
                                                "Type": "string",
                                                "defaultValue": false
                                              }
                                            },
                                            "variables": {},
                                            "resources": [
                                              {
                                                "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                "apiVersion": "2020-05-01",
                                                "properties": {
                                                  "allowVirtualNetworkAccess": true,
                                                  "allowForwardedTraffic": true,
                                                  "allowGatewayTransit": true,
                                                  "useRemoteGateways": false,
                                                  "remoteVirtualNetwork": {
                                                    "id": "[[parameters('remoteVirtualNetwork')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "outputs": {}
                                          },
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "value": "[concat(subscription().id,'/resourceGroups/',parameters('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
                                            },
                                            "hubName": {
                                              "value": "[split(parameters('hubResourceId'),'/')[8]]"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                },
                                "resourceGroup": "[parameters('vNetRgName')]"
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-vWAN",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN",
              "ResourceName": "Deploy-vWAN",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN",
              "Properties": {
                "Description": "Deploy the Virtual WAN in the specific region.",
                "DisplayName": "Deploy the Virtual WAN in the specific region",
                "Mode": "All",
                "Parameters": {
                  "vwanname": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vwanname",
                      "description": "Name of the Virtual WAN"
                    }
                  },
                  "vwanRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "vwanRegion",
                      "description": "Select Azure region for Virtual WAN",
                      "strongType": "location"
                    }
                  },
                  "rgName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "rgName",
                      "description": "Provide name for resource group."
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Network/virtualWans",
                      "deploymentScope": "Subscription",
                      "existenceScope": "ResourceGroup",
                      "name": "[parameters('vwanname')]",
                      "resourceGroupName": "[parameters('rgName')]",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                      ],
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[parameters('rgName')]"
                            },
                            "vwanname": {
                              "value": "[parameters('vwanname')]"
                            },
                            "vwanRegion": {
                              "value": "[parameters('vwanRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "rgName": {
                                "type": "string"
                              },
                              "vwanname": {
                                "type": "string"
                              },
                              "vwanRegion": {
                                "type": "string"
                              }
                            },
                            "variables": {
                              "vwansku": "Standard"
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "vwan",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Network/virtualWans",
                                        "apiVersion": "2020-05-01",
                                        "location": "[parameters('vwanRegion')]",
                                        "name": "[parameters('vwanname')]",
                                        "properties": {
                                          "virtualHubs": [],
                                          "vpnSites": [],
                                          "type": "[variables('vwansku')]"
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Windows-DomainJoin",
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin",
              "ResourceName": "Deploy-Windows-DomainJoin",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": null,
              "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin",
              "Properties": {
                "Description": "Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine",
                "DisplayName": "Deploy Windows Domain Join Extension with keyvault configuration",
                "Mode": "All",
                "Parameters": {
                  "domainUsername": {
                    "type": "String",
                    "metadata": {
                      "displayName": "domainUsername",
                      "description": null
                    }
                  },
                  "domainPassword": {
                    "type": "String",
                    "metadata": {
                      "displayName": "domainPassword",
                      "description": null
                    }
                  },
                  "domainFQDN": {
                    "type": "String",
                    "metadata": {
                      "displayName": "domainFQDN",
                      "description": null
                    }
                  },
                  "domainOUPath": {
                    "type": "String",
                    "metadata": {
                      "displayName": "domainOUPath",
                      "description": null
                    }
                  },
                  "keyVaultResourceId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "keyVaultResourceId",
                      "description": null
                    }
                  },
                  "effect": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Effect",
                      "description": "Enable or disable the execution of the policy"
                    },
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists"
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "field": "Microsoft.Compute/imagePublisher",
                        "equals": "MicrosoftWindowsServer"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "equals": "WindowsServer"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "in": [
                          "2008-R2-SP1",
                          "2008-R2-SP1-smalldisk",
                          "2008-R2-SP1-zhcn",
                          "2012-Datacenter",
                          "2012-datacenter-gensecond",
                          "2012-Datacenter-smalldisk",
                          "2012-datacenter-smalldisk-g2",
                          "2012-Datacenter-zhcn",
                          "2012-datacenter-zhcn-g2",
                          "2012-R2-Datacenter",
                          "2012-r2-datacenter-gensecond",
                          "2012-R2-Datacenter-smalldisk",
                          "2012-r2-datacenter-smalldisk-g2",
                          "2012-R2-Datacenter-zhcn",
                          "2012-r2-datacenter-zhcn-g2",
                          "2016-Datacenter",
                          "2016-datacenter-gensecond",
                          "2016-datacenter-gs",
                          "2016-Datacenter-Server-Core",
                          "2016-datacenter-server-core-g2",
                          "2016-Datacenter-Server-Core-smalldisk",
                          "2016-datacenter-server-core-smalldisk-g2",
                          "2016-Datacenter-smalldisk",
                          "2016-datacenter-smalldisk-g2",
                          "2016-Datacenter-with-Containers",
                          "2016-datacenter-with-containers-g2",
                          "2016-Datacenter-with-RDSH",
                          "2016-Datacenter-zhcn",
                          "2016-datacenter-zhcn-g2",
                          "2019-Datacenter",
                          "2019-Datacenter-Core",
                          "2019-datacenter-core-g2",
                          "2019-Datacenter-Core-smalldisk",
                          "2019-datacenter-core-smalldisk-g2",
                          "2019-Datacenter-Core-with-Containers",
                          "2019-datacenter-core-with-containers-g2",
                          "2019-Datacenter-Core-with-Containers-smalldisk",
                          "2019-datacenter-core-with-containers-smalldisk-g2",
                          "2019-datacenter-gensecond",
                          "2019-datacenter-gs",
                          "2019-Datacenter-smalldisk",
                          "2019-datacenter-smalldisk-g2",
                          "2019-Datacenter-with-Containers",
                          "2019-datacenter-with-containers-g2",
                          "2019-Datacenter-with-Containers-smalldisk",
                          "2019-datacenter-with-containers-smalldisk-g2",
                          "2019-Datacenter-zhcn",
                          "2019-datacenter-zhcn-g2",
                          "Datacenter-Core-1803-with-Containers-smalldisk",
                          "datacenter-core-1803-with-containers-smalldisk-g2",
                          "Datacenter-Core-1809-with-Containers-smalldisk",
                          "datacenter-core-1809-with-containers-smalldisk-g2",
                          "Datacenter-Core-1903-with-Containers-smalldisk",
                          "datacenter-core-1903-with-containers-smalldisk-g2",
                          "datacenter-core-1909-with-containers-smalldisk",
                          "datacenter-core-1909-with-containers-smalldisk-g1",
                          "datacenter-core-1909-with-containers-smalldisk-g2"
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "[parameters('effect')]",
                    "details": {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Compute/virtualMachines/extensions/type",
                            "equals": "JsonADDomainExtension"
                          },
                          {
                            "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                            "equals": "Microsoft.Compute"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "domainUsername": {
                              "reference": {
                                "keyVault": {
                                  "id": "[parameters('keyVaultResourceId')]"
                                },
                                "secretName": "[parameters('domainUsername')]"
                              }
                            },
                            "domainPassword": {
                              "reference": {
                                "keyVault": {
                                  "id": "[parameters('keyVaultResourceId')]"
                                },
                                "secretName": "[parameters('domainPassword')]"
                              }
                            },
                            "domainOUPath": {
                              "value": "[parameters('domainOUPath')]"
                            },
                            "domainFQDN": {
                              "value": "[parameters('domainFQDN')]"
                            },
                            "keyVaultResourceId": {
                              "value": "[parameters('keyVaultResourceId')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "domainUsername": {
                                "type": "string"
                              },
                              "domainPassword": {
                                "type": "securestring"
                              },
                              "domainFQDN": {
                                "type": "string"
                              },
                              "domainOUPath": {
                                "type": "string"
                              },
                              "keyVaultResourceId": {
                                "type": "string"
                              }
                            },
                            "variables": {
                              "domainJoinOptions": 3,
                              "vmName": "[parameters('vmName')]"
                            },
                            "resources": [
                              {
                                "apiVersion": "2015-06-15",
                                "type": "Microsoft.Compute/virtualMachines/extensions",
                                "name": "[concat(variables('vmName'),'/joindomain')]",
                                "location": "[resourceGroup().location]",
                                "properties": {
                                  "publisher": "Microsoft.Compute",
                                  "type": "JsonADDomainExtension",
                                  "typeHandlerVersion": "1.3",
                                  "autoUpgradeMinorVersion": true,
                                  "settings": {
                                    "Name": "[parameters('domainFQDN')]",
                                    "User": "[parameters('domainUserName')]",
                                    "Restart": "true",
                                    "Options": "[variables('domainJoinOptions')]",
                                    "OUPath": "[parameters('domainOUPath')]"
                                  },
                                  "protectedSettings": {
                                    "Password": "[parameters('domainPassword')]"
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "policySetDefinitions": [
            {
              "Name": "Deny-PublicEndpoints",
              "PolicySetDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints",
              "Properties": {
                "Description": "This policy denies creation of Azure PAAS services with exposed public endpoints.  This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. ",
                "DisplayName": "Public network access should be disabled for PAAS services",
                "Parameters": {
                  "AKSPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies  the creation of  Azure Kubernetes Service non-private clusters",
                      "displayName": "Public network access on AKS API should be disabled"
                    },
                    "type": "String"
                  },
                  "CosmosPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies that  Cosmos database accounts  are created with out public network access is disabled.",
                      "displayName": "Public network access should be disabled for CosmosDB"
                    },
                    "type": "String"
                  },
                  "KeyVaultPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints",
                      "displayName": "Public network access should be disabled for KeyVault"
                    },
                    "type": "String"
                  },
                  "MariaDBPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies the creation of Maria DB accounts with exposed public endpoints",
                      "displayName": "Public network access should be disabled for MariaDB"
                    },
                    "type": "String"
                  },
                  "MySQLPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies creation of MySql DB accounts with exposed public endpoints",
                      "displayName": "Public network access should be disabled for MySQL"
                    },
                    "type": "String"
                  },
                  "PostgreSQLPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints",
                      "displayName": "Public network access should be disabled for PostgreSql"
                    },
                    "type": "String"
                  },
                  "SqlServerPublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies creation of Sql servers with exposed public endpoints",
                      "displayName": "Public network access on Azure SQL Database should be disabled"
                    },
                    "type": "String"
                  },
                  "StoragePublicIpDenyEffect": {
                    "allowedValues": [
                      "Audit",
                      "Deny",
                      "Disabled"
                    ],
                    "defaultValue": "Deny",
                    "metadata": {
                      "description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints",
                      "displayName": "Public network access onStorage accounts should be disabled"
                    },
                    "type": "String"
                  }
                },
                "PolicyDefinitionGroups": null,
                "PolicyDefinitions": [
                  {
                    "policyDefinitionReferenceId": "CosmosDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('CosmosPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "MariaDBDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('MariaDBPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "MySQLDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('MySQLPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "PostgreSQLDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('PostgreSQLPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "KeyVaultDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('KeyVaultPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SqlServerDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('SqlServerPublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "StorageDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('StoragePublicIpDenyEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AKSDenyPaasPublicIP",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('AKSPublicIpDenyEffect')]"
                      }
                    }
                  }
                ]
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints",
              "ResourceName": "Deny-PublicEndpoints",
              "ResourceType": "Microsoft.Authorization/policySetDefinitions",
              "SubscriptionId": null
            },
            {
              "Name": "Deploy-Diag-LogAnalytics",
              "PolicySetDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics",
              "Properties": {
                "Description": "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included ",
                "DisplayName": "Deploy Diagnostic Settings to Azure Services",
                "Parameters": {
                  "ACILogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.",
                      "displayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "ACRLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.",
                      "displayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "AKSLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                      "displayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "AnalysisServiceLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "APIMgmtLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "ApplicationGatewayLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "AppServiceLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "AppServiceWebappLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "AutomationLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "BatchLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "CDNEndpointsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "CognitiveServicesLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "CosmosLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "DatabricksLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "DataFactoryLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "DataLakeAnalyticsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "DataLakeStoreLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "EventGridSubLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "EventGridTopicLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "EventHubLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "EventSystemTopicLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "ExpressRouteLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "FirewallLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "FrontDoorLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "FunctionAppLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "HDInsightLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "IotHubLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "KeyVaultLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "LoadBalancerLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "logAnalytics": {
                    "metadata": {
                      "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                      "displayName": "Log Analytics workspace",
                      "strongType": "omsWorkspace"
                    },
                    "type": "String"
                  },
                  "LogicAppsISELogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "LogicAppsWFLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "MariaDBLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "MlWorkspaceLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "MySQLLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "NetworkNICLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "NetworkPublicIPNicLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "NetworkSecurityGroupsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "PostgreSQLLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "PowerBIEmbeddedLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "profileName": {
                    "defaultValue": "setbypolicy",
                    "metadata": {
                      "description": "The diagnostic settings profile name",
                      "displayName": "Profile name"
                    },
                    "type": "String"
                  },
                  "RecoveryVaultLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "RedisCacheLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "RelayLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "SearchServicesLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "ServiceBusLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "SignalRLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "SQLDBsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "SQLElasticPoolsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "SQLMLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "StreamAnalyticsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "TimeSeriesInsightsLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "TrafficManagerLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "VirtualMachinesLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "VirtualNetworkLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "VMSSLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                      "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"
                    },
                    "type": "String"
                  },
                  "VNetGWLogAnalyticsEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                      "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"
                    },
                    "type": "String"
                  }
                },
                "PolicyDefinitionGroups": null,
                "PolicyDefinitions": [
                  {
                    "policyDefinitionReferenceId": "ACIDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('ACILogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "MariaDBDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('MariaDBLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "MlWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('MlWorkspaceLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "MySQLDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('MySQLLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "NetworkNICDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('NetworkNICLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "PostgreSQLDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('PostgreSQLLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('PowerBIEmbeddedLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PublicIP",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('NetworkPublicIPNicLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('RecoveryVaultLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "RedisCacheDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('RedisCacheLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "RelayDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('RelayLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "LogicAppsWFDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('LogicAppsWFLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SearchServicesDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('SearchServicesLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SignalRDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('SignalRLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SQLDBsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('SQLDBsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('SQLElasticPoolsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SQLMDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('SQLMLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('StreamAnalyticsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('TimeSeriesInsightsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "TrafficManagerDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('TrafficManagerLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('VirtualNetworkLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('VirtualMachinesLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "VMSSDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('VMSSLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "VNetGWDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('VNetGWLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "ServiceBusDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('ServiceBusLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AppServiceDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('AppServiceLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "LogicAppsISEDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('LogicAppsISELogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "KeyVaultDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('KeyVaultLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "ACRDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('ACRLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AKSDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('AKSLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AnalysisServiceDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('AnalysisServiceLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "APIMgmtDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('APIMgmtLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AutomationDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('AutomationLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "BatchDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('BatchLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "CDNEndpointsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('CDNEndpointsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "CognitiveServicesDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('CognitiveServicesLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "CosmosDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('CosmosLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "DatabricksDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('DatabricksLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "LoadBalancerDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('LoadBalancerLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "DataFactoryDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('DataFactoryLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('DataLakeAnalyticsLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "EventGridSubDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('EventGridSubLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "EventGridTopicDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('EventGridTopicLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "EventHubDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('EventHubLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "EventSystemTopicDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('EventSystemTopicLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "ExpressRouteDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('ExpressRouteLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "FirewallDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('FirewallLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "FrontDoorDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('FrontDoorLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "FunctionAppDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('FunctionAppLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "HDInsightDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('HDInsightLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "IotHubDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('IotHubLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "DataLakeStoreDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('DataLakeStoreLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "AppServiceWebappDeployDiagnosticLogDeployLogAnalytics",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
                    "parameters": {
                      "logAnalytics": {
                        "value": "[parameters('logAnalytics')]"
                      },
                      "effect": {
                        "value": "[parameters('AppServiceWebappLogAnalyticsEffect')]"
                      },
                      "profileName": {
                        "value": "[parameters('profileName')]"
                      }
                    }
                  }
                ]
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics",
              "ResourceName": "Deploy-Diag-LogAnalytics",
              "ResourceType": "Microsoft.Authorization/policySetDefinitions",
              "SubscriptionId": null
            },
            {
              "Name": "Deploy-Sql-Security",
              "PolicySetDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security",
              "Properties": {
                "Description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment",
                "DisplayName": "Deploy SQL Database built-in SQL security configuration",
                "Parameters": {
                  "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploy auditing settings to SQL Database when it not exist in the deployment",
                      "displayName": "Deploy SQL database auditing settings"
                    },
                    "type": "String"
                  },
                  "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration",
                      "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts"
                    },
                    "type": "String"
                  },
                  "SqlDbTdeDeploySqlSecurityEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment",
                      "displayName": "Deploy SQL Database Transparent Data Encryption "
                    },
                    "type": "String"
                  },
                  "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
                    "allowedValues": [
                      "DeployIfNotExists",
                      "Disabled"
                    ],
                    "defaultValue": "DeployIfNotExists",
                    "metadata": {
                      "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters",
                      "displayName": "Deploy SQL Database vulnerability Assessments"
                    },
                    "type": "String"
                  },
                  "vulnerabilityAssessmentsEmail": {
                    "metadata": {
                      "description": "The email address to send alerts",
                      "displayName": "The email address to send alerts"
                    },
                    "type": "String"
                  },
                  "vulnerabilityAssessmentsStorageID": {
                    "metadata": {
                      "description": "The storage account ID to store assessments",
                      "displayName": "The storage account ID to store assessments"
                    },
                    "type": "String"
                  }
                },
                "PolicyDefinitionGroups": null,
                "PolicyDefinitions": [
                  {
                    "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
                    "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
                    "parameters": {
                      "effect": {
                        "value": "[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                      },
                      "vulnerabilityAssessmentsEmail": {
                        "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                      },
                      "vulnerabilityAssessmentsStorageID": {
                        "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                      }
                    }
                  }
                ]
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security",
              "ResourceName": "Deploy-Sql-Security",
              "ResourceType": "Microsoft.Authorization/policySetDefinitions",
              "SubscriptionId": null
            }
          ],
          "policyAssignments": [
            {
              "Identity": {
                "principalId": "5de44506-b031-4169-954c-0797f4d1510f",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-ASC-Monitoring",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring",
              "Properties": {
                "Description": "ASC-Monitoring",
                "DisplayName": "ASC-Monitoring",
                "NotScopes": null,
                "Parameters": null,
                "PolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring",
              "ResourceName": "Deploy-ASC-Monitoring",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "b06d43f4-1393-4a32-a120-cf785ee5e5fd",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-ASC-Security",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Security",
              "Properties": {
                "Description": "Deploy-ASC",
                "DisplayName": "Deploy-ASC",
                "NotScopes": null,
                "Parameters": {
                  "pricingTierAppServices": {
                    "value": "Standard"
                  },
                  "pricingTierContainerRegistry": {
                    "value": "Standard"
                  },
                  "pricingTierKeyVaults": {
                    "value": "Standard"
                  },
                  "pricingTierKubernetesService": {
                    "value": "Standard"
                  },
                  "pricingTierSqlServers": {
                    "value": "Standard"
                  },
                  "pricingTierStorageAccounts": {
                    "value": "Standard"
                  },
                  "pricingTierVms": {
                    "value": "Standard"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Security",
              "ResourceName": "Deploy-ASC-Security",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "7aad9c8c-e854-4147-8c29-0cd4f709c7b7",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-AzActivity-Log",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
              "Properties": {
                "Description": "Deploy-AzActivity-Log",
                "DisplayName": "Deploy-AzActivity-Log",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  },
                  "logsEnabled": {
                    "value": "True"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
              "ResourceName": "Deploy-AzActivity-Log",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "78220103-1071-46ee-b7b6-58754ac9e3d2",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-LX-Arc-Monitoring",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring",
              "Properties": {
                "Description": "Deploy-Linux-Arc-Monitoring",
                "DisplayName": "Deploy-Linux-Arc-Monitoring",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring",
              "ResourceName": "Deploy-LX-Arc-Monitoring",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "6311191c-4edf-4ce8-bd39-5a49aabfc0f2",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-Resource-Diag",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag",
              "Properties": {
                "Description": "Deploy-Resource-Diag",
                "DisplayName": "Deploy-Resource-Diag",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag",
              "ResourceName": "Deploy-Resource-Diag",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "f54328fd-eb09-44e5-8bc9-c376c2775f2f",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-VM-Monitoring",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
              "Properties": {
                "Description": "Deploy-VM-Monitoring",
                "DisplayName": "Deploy-VM-Monitoring",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics_1": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
              "ResourceName": "Deploy-VM-Monitoring",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "c18b3529-6d79-46f2-b163-9a1b7d726b47",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-VMSS-Monitoring",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
              "Properties": {
                "Description": "Deploy-VMSS-Monitoring",
                "DisplayName": "Deploy-VMSS-Monitoring",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics_1": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
              "ResourceName": "Deploy-VMSS-Monitoring",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            },
            {
              "Identity": {
                "principalId": "9b0f8dbb-0efc-4877-9d30-c2fd1a1db85b",
                "tenantId": "4a02ceba-3c5e-478b-8855-a218e02dd6cc",
                "type": "SystemAssigned"
              },
              "Location": "eastus2",
              "Name": "Deploy-WS-Arc-Monitoring",
              "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring",
              "Properties": {
                "Description": "Deploy-Windows-Arc-Monitoring",
                "DisplayName": "Deploy-Windows-Arc-Monitoring",
                "NotScopes": null,
                "Parameters": {
                  "logAnalytics": {
                    "value": "/subscriptions/06867d06-c4c7-47f1-a065-1aa3f882cdc2/resourcegroups/eslz2-mgmt/providers/microsoft.operationalinsights/workspaces/eslz2-la-06867d06-c4c7-47f1-a065-1aa3f882cdc2"
                  }
                },
                "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESLZ2"
              },
              "ResourceId": "/providers/Microsoft.Management/managementGroups/ESLZ2/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring",
              "ResourceName": "Deploy-WS-Arc-Monitoring",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            }
          ],
          "roleDefinitions": [],
          "roleAssignments": []
        }
      }
    }
  }
}
